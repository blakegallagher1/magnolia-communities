name: Security Audit

on:
  schedule:
    # Run monthly on the 1st at 9 AM UTC
    - cron: '0 9 1 * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches:
      - main
    paths:
      - 'backend/requirements.txt'
      - 'frontend/package.json'
      - 'frontend/package-lock.json'

jobs:
  frontend-security:
    name: Frontend Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Run npm audit
        working-directory: frontend
        run: |
          echo "Running npm audit..."
          npm audit --audit-level=moderate || true
          
          # Fail if critical or high vulnerabilities found
          npm audit --audit-level=high
      
      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-audit-results
          path: frontend/npm-audit.json

  backend-security:
    name: Backend Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      
      - name: Install pip-audit
        run: pip install pip-audit
      
      - name: Run pip-audit
        working-directory: backend
        run: |
          echo "Running pip-audit..."
          pip-audit -r requirements.txt --desc on || true
          
          # Generate JSON report
          pip-audit -r requirements.txt --format json -o audit-report.json || true
      
      - name: Check for critical vulnerabilities
        working-directory: backend
        run: |
          # Fail if critical or high severity vulnerabilities found
          # Ignore known advisory without a fix: GHSA-wj6h-64fc-37mp (ecdsa 0.19.1)
          pip-audit -r requirements.txt --vulnerability-service osv --desc on --ignore-vuln GHSA-wj6h-64fc-37mp
      
      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-audit-results
          path: backend/audit-report.json

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          deny-licenses: GPL-3.0, AGPL-3.0

  notify:
    name: Notify Security Status
    runs-on: ubuntu-latest
    needs: [frontend-security, backend-security]
    if: always() && github.event_name == 'schedule'
    
    steps:
      - name: Create security report
        run: |
          echo "### Monthly Security Audit Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status**:" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: ${{ needs.frontend-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: ${{ needs.backend-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Review detailed audit results in workflow artifacts." >> $GITHUB_STEP_SUMMARY